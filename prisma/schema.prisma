generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int              @id @default(autoincrement())
  firstName String
  lastName  String
  email     String           @unique
  password  String
  role      String           @default("STUDENT")
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  exams     ExamEnrollment[]
}

model Exam {
  id          Int              @id @default(autoincrement())
  title       String
  courseCode  String
  description String?
  duration    Int
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  enrollments ExamEnrollment[]
  questions   Question[]
}

model Question {
  id            Int      @id @default(autoincrement())
  examId        Int
  text          String
  type          String
  options       String[]
  correctAnswer String?
  points        Int      @default(1)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  answer        Answer[]
  exam          Exam     @relation(fields: [examId], references: [id])
}

model ExamEnrollment {
  id        Int       @id @default(autoincrement())
  userId    Int
  examId    Int
  startTime DateTime?
  endTime   DateTime?
  score     Int?
  completed Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  answers   Answer[]
  exam      Exam      @relation(fields: [examId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

model Answer {
  id           Int            @id @default(autoincrement())
  enrollmentId Int
  questionId   Int
  response     String
  isCorrect    Boolean?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  enrollment   ExamEnrollment @relation(fields: [enrollmentId], references: [id])
  question     Question       @relation(fields: [questionId], references: [id])
}
